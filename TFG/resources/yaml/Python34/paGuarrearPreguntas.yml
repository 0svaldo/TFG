Tema: 1
Titulo: "#Primera toma de contacto"
Introduccion: |
  First Header | Second Header |         Third Header   
  :----------- | :-----------: | -------------------:    
  First row    |      Data     | Very long data entry    
  Second row   |    **Cell**   |               *Cell*   
Lecciones:
 - Leccion: 1 
   Titulo_Leccion: "##Operaciones con numeros"
   Explicacion: |
    El interprete funciona como una simple calculadora, Tu tecleas una expresion 
    y el muestra el resultado. La sintaxis de las expresiones es bastante intuitiva. 
    Los operadores +, -, * y / funcionan como en otros lenguajes (p. ej. Pascal o C). 
    Se puede usar parentesis para agrupar operaciones. El simbolo de igualdad sirve 
    para asignar valores a variables.
   Preguntas:
    - Pregunta: 1 
      Enunciado: Asigna a la variable i el valor 4
      Tipo: Codigo
      Resultado: llamada(String codigo)#i=4
    - Pregunta: 2
      Enunciado: ¿Si hacemos la operacion **7/2** que resultado obtenemos?
      Tipo: Opciones
      Multiple: no
      Pista: las operaciones enteras tienen resultado entero
#para el tipo opciones
      Opcion_correcta: "1"
      Opciones: 
       - 1) 3
       - 2) 4
       - 3) 3.5
       - 4) ninguna de las anteriores
    - Pregunta: 3
      Enunciado: |
       
       # Nivel 1
       ## Nivel 2
       ### Nivel 3
       El **comienzo** de la lista
       
       * El primero
       * El segundo 
       * El tercero  
           1. 3.1
           1. 3.2
           
       Y esto el final de la lista   
           
           x = 1
           while True:
              print "To infinity and beyond! We're getting close, on %d now!" % (x)
              x += 1
       
       
       First Header | Second Header |        Third Header   
       :----------- | :-----------: | -------------------:    
       First row    |      Data     | Very long data entry    
       Second row   |    **Cell**   |               *Cell* 
       
        Calcula el area de este triangulo ![triangulo](file:///resources/images/triangulo.jpg)
#Imagen_pregunta: ruta imagen
      Tipo: Sintaxis
      Gramatica: Gramatica adecuada a la pregunta
      Resultado: a= 30
 - Leccion: 2
   Titulo_Leccion: Cadenas
   Explicacion: >
    Ademas de los nUmeros, Python tambiEn sabe manipular cadenas, que se 
    pueden expresar de diversas maneras. Se pueden encerrar entre comillas simples o dobles.
   Preguntas:
    - Pregunta: 1
      Enunciado: Asigna a la variable â€˜cadenaâ€™ el valor â€˜Hola Mundoâ€™
      Tipo: Codigo
      Resultado: llamada(string codigo)#cadena = â€™Hola Mundoâ€™
    - Pregunta: 2
      Enunciado:  Introduce las siguientes palabras en la variable lista_animales separadas por un salto de linea. gato, perro, burro
      Tipo: Codigo
      Resultado: llamada(string codigo)#animales= â€œgato /nperro /nburroâ€�
    - Pregunta: 3
      Enunciado: Asigna a la variable palabra la cadena â€˜pacoâ€™ 3 veces, el resultado deberÃ­a ser â€˜pacopacopacoâ€™ (sin inicializar palabra de la forma palabra = â€™pacopacopacoâ€™).
      Explicacion: >
       En python, se puede concatenar una cadena multiples 
       * veces con el operador â€˜*â€™ y el numero de veces que queremos repetir la palabra.
      Pista: variable= â€œcadenaâ€� * n
      Tipo: Sintaxis
      Gramatica: por definir
      Resultado: cad=pacopacopaco
    - Pregunta: 4
      Enunciado: Como sacarias la subcadena â€˜caâ€™ de la palabra recamara?
      Explicacion: Las cadenas en python se pueden tratar como si fueran un array de elementos, siendo el 0 el primer caracter.
      Tipo: Opciones
      Multiple: no
      Opcion_correcta: "3"
      Opciones: 
       - 1) recamara[2:3]
       - 2) recamara[1:3]
       - 3) recamara[2:4]
       - 4) recamara[1:4]